rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user's ID matches the document's user ID
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to create their own document upon sign-up
      allow create: if isSignedIn() && isOwner(userId);
      // Allow a user to read and update their own profile
      allow read, update: if isSignedIn() && isOwner(userId);
      // Deny deletion of user profiles
      allow delete: if false;
    }

    // Rules for public-facing data (clinics, doctors, hospitals, diagnostics)
    // These need to be readable by everyone, including unauthenticated users.
    match /clinics/{clinicId} {
      allow read: if true;
      // Write access should be restricted to admins or clinic owners
      allow write: if false; // Keep writes restricted for now
      
      // Allow reading doctors within a clinic
      match /doctors/{doctorId} {
        allow read: if true;
        allow write: if false;
      }
    }
    
    match /doctors/{doctorId} {
        allow read: if true;
        allow write: if false; // Keep writes restricted
    }

    match /hospitals/{hospitalId} {
        allow read: if true;
        allow write: if false; // Keep writes restricted
    }
    
    match /diagnostics/{centreId} {
        allow read: if true;
        allow write: if false; // Keep writes restricted
        
        // Allow reading subcollections
        match /{allPaths=**} {
          allow read: if true;
        }
    }

    // Rules for the 'appointments' collection
    match /appointments/{appointmentId} {
      // Allow authenticated users to create their own appointments
      allow create: if isSignedIn() && request.resource.data.patientId == request.auth.uid;
      // Allow a user to read, update (e.g., cancel), or delete their own appointments
      allow read, update, delete: if isSignedIn() && resource.data.patientId == request.auth.uid;
    }
    
    // Rules for test appointments
    match /testAppointments/{testAppointmentId} {
        allow create: if isSignedIn() && request.resource.data.patientId == request.auth.uid;
        allow read, update, delete: if isSignedIn() && resource.data.patientId == request.auth.uid;
    }
  }
}
