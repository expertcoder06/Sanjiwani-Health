
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Allow logged-in users to create their own user document upon sign-up,
    // and only allow them to read/update their own document afterwards.
    match /users/{userId} {
      allow read, update: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // Appointments can be created by any authenticated user for themselves.
    // Only the user who created the appointment can read it.
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() && isOwner(resource.data.patientId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.patientId);
      allow update, delete: if false; // Disallow updates/deletes for now
    }

    // Public collections that anyone can read
    match /clinics/{clinicId} {
      allow read: if true;
      allow write: if false; // Protect public data from being changed
      
      match /doctors/{doctorId} {
        allow read: if true;
        allow write: if false;
      }
    }

    match /doctors/{doctorId} {
      allow read: if true;
      allow write: if false;
    }

    match /hospitals/{hospitalId} {
      allow read: if true;
      allow write: if false;
    }

    match /diagnostics/{centreId} {
      allow read: if true;
      allow write: if false;

      match /tests/{testId} {
        allow read: if true;
        allow write: if false;
      }
      match /pathologists/{pathologistId} {
        allow read: if true;
        allow write: if false;
      }
    }
    
     match /testAppointments/{testAppointmentId} {
      allow read: if isAuthenticated() && isOwner(resource.data.patientId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.patientId);
      allow write: if false;
    }
  }
}
