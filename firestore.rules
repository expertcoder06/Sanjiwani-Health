
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Role-based User Collections ---

    // Anyone can read doctors, clinics, etc. for search pages
    match /doctors/{docId} {
      allow read: if true;
      allow write: if isSignedIn(); // Allow authenticated users to sign up as doctors
    }

    match /clinics/{clinicId} {
      allow read: if true;
      allow write: if isSignedIn(); // Allow authenticated users to sign up as clinics
    }
    
    match /hospitals/{hospitalId} {
        allow read: if true;
        allow write: if isSignedIn();
    }
    
    match /diagnostics/{diagId} {
        allow read: if true;
        allow write: if isSignedIn();
    }
    
    match /diagnostics/{diagId}/pathologists/{pathId} {
        allow read: if true;
        allow write: if isSignedIn();
    }

    // Customers can create their own profile and read it
    match /customers/{userId} {
        allow read, create: if isSignedIn() && request.auth.uid == userId;
    }

    // Master users collection for role lookup
    match /users/{userId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.auth.uid == userId;
    }
    
    // --- Functional Collections ---

    // Authenticated users can create appointments
    match /appointments/{appointmentId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
    }
    
     match /testAppointments/{appointmentId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
    }
  }
}
